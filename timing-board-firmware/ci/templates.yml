---
.only-default:
  only:
    - branches
    - pushes
    - merge_requests
    - tags

.jt_base: 
  extends: .only-default
  image: ${IPBB_DOCKER_REGISTRY}/${IPBB_DOCKER_TAG}
  tags:
    - docker
    - xilinx-tools
  before_script:
    - echo "Running job in ${HOME}"
    - source /software/Xilinx/Vivado/${VIVADO_VERSION}/settings64.sh
    - export QUESTASIM_ROOT="/software/mentor/questa/${QUESTASIM_VERSION}/questasim/"
    - export PATH="${QUESTASIM_ROOT}/bin/:${PATH}"
    - export PATH="/opt/cactus/bin/uhal/tools/:${PATH}"
    - export LD_LIBRARY_PATH="/opt/cactus/lib/:${LD_LIBRARY_PATH}"
    - export IPBB_SIMLIB_BASE=/scratch/xilinx-simlibs
    - if [ -d "build_area" ]; then cd build_area; ls; fi
    - env | grep -v PASSWORD | grep -v TOKEN | sort
    - export CI_PRODUCT_SLUG="${CI_MERGE_REQUEST_IID:+mr}${CI_MERGE_REQUEST_IID:-${CI_COMMIT_REF_SLUG}}_sha-${CI_COMMIT_SHA:0:8}"

#------------------------------------------------------------------------------
.jt_sim_check:
  extends: .jt_base
  stage: checks
  script:
    - ipbb toolbox check-dep sim timing-board-firmware:${PROJECT_DIR_PATH} ${PROJECT_TOP_DEP}
    - ipbb proj create sim ${CI_JOB_NAME#check:} timing-board-firmware:${PROJECT_DIR_PATH} ${PROJECT_TOP_DEP}
    - cd proj/${CI_JOB_NAME#check:}
    - ipbb sim setup-simlib ipcores ${SIM_FLAVOUR} make-project
#------------------------------------------------------------------------------


#------------------------------------------------------------------------------
.jt_viv_check:
  extends: .jt_base
  stage: checks
  script:
    - ipbb toolbox check-dep vivado timing-board-firmware:${PROJECT_DIR_PATH} ${PROJECT_TOP_DEP}
    - ipbb proj create vivado ${CI_JOB_NAME#check:} timing-board-firmware:${PROJECT_DIR_PATH} ${PROJECT_TOP_DEP}
    - cd proj/${CI_JOB_NAME#check:}
    - ipbb ipbus gendecoders -c
    - ipbb vivado make-project
    - ipbb vivado check-syntax
  artifacts:
    when: on_success
    paths: 
      - build_area
    expire_in: 1 day
#------------------------------------------------------------------------------


#------------------------------------------------------------------------------
.jt_viv_build:
  extends: .jt_base
  stage: builds
  only:
    - web
    - tags
    - merge_requests

  script:
    - mkdir -p ${HOME}/.Xilinx/Vivado
    - echo 'puts {Setting maximum number of threads to 8}' >> ${HOME}/.Xilinx/Vivado/Vivado_init.tcl
    - echo 'set_param general.maxThreads 8' >> ${HOME}/.Xilinx/Vivado/Vivado_init.tcl
    - cd proj/${CI_JOB_NAME#build:}
    - ipbb vivado -v none synth -j8 
    - ipbb vivado -v none impl 
    - ipbb vivado bitfile
    - ipbb vivado package --tag ${CI_PRODUCT_SLUG}

  after_script:
    - export PROJ_NAME=${CI_JOB_NAME#build:}
    - cd build_area/proj/${PROJ_NAME}
    - mkdir -p ${CI_PROJECT_DIR}/${CI_OUTPUT_DIR}/logs
    - mkdir -p ${CI_PROJECT_DIR}/${CI_OUTPUT_DIR}/reports
    - cp package/*.tgz ${CI_PROJECT_DIR}/${CI_OUTPUT_DIR} 2>/dev/null || true
    - cp *.log ${CI_PROJECT_DIR}/${CI_OUTPUT_DIR}/logs 2>/dev/null || true
    - find -name \*.rpt -exec cp {} ${CI_PROJECT_DIR}/${CI_OUTPUT_DIR}/reports \;

  artifacts:
    when: always
    name: "${CI_JOB_NAME#build:}-on-${CI_COMMIT_REF_SLUG}-${CI_COMMIT_SHA:0:8}"
    paths:
      - ${CI_OUTPUT_DIR}
#------------------------------------------------------------------------------


# ------------------------------------------------------------------------------
.jt_pub_arts:
  stage: publish
  image: gitlab-registry.cern.ch/ci-tools/ci-web-deployer:latest

  before_script:
    - export EOS_PATH=${OUTPUT_ROOT_DIR}/${EOS_GROUP}/${EOS_LABEL}/pipeline${CI_PIPELINE_ID}
  script:
    - env | grep -v PASSWORD | grep -v TOKEN | sort
    - echo "${EOS_ACCOUNT_PASSWORD}" | kinit ${EOS_ACCOUNT_USERNAME}@CERN.CH
    - klist
    - ssh -F ${CI_PROJECT_DIR}/ci/ssh_config ${EOS_ACCOUNT_USERNAME}@lxplus "rm -rf ${EOS_PATH} && mkdir -p ${EOS_PATH}"
    - ssh -F ${CI_PROJECT_DIR}/ci/ssh_config ${EOS_ACCOUNT_USERNAME}@lxplus "ln -sfnv ${EOS_PATH} `dirname ${EOS_PATH}`/latest"
    - kdestroy
    - echo "Deploying ${CI_OUTPUT_DIR} to eos"
    - ls -lt ${CI_OUTPUT_DIR}
    - deploy-eos
# ------------------------------------------------------------------------------
